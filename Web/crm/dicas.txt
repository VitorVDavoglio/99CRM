Para criar a pasta para instalar todos o que é necessário para instalar, comando:
    - npx create-react-app (nome da pasta que será criada e instalado o necessário)

Já de inicio você pode apagar os arquivos dentro das pastas
    -public
        -logo192
        -logo512
        -manifest.json
        -robots.txt
    -src
        -App.css
        -App.json
        -App.teste.js
        -index.css
        -logo.svg
        -reportWebVitals.js
        -setupTests.js

Nos arquivos restantes pode deixar como
    -public
        -index.html
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="utf-8" />
                <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <title>React App</title> 
            </head>
            <body>
                <noscript>You need to enable JavaScript to run this app.</noscript>
                <div id="root">
                
                </div>
            </body>
            </html>
    
    -src
        -index.js
            import React from 'react';
            import ReactDOM from 'react-dom/client';

            const root = ReactDOM.createRoot(document.getElementById('root'));
            root.render(<> -->É necessário deixar assim pq não é interpretado varios comandos, então deixando os outros dentro deste fica melhor
                <h1>Título</h1>
            </>
            );

    dentro do SRC pode ser criadas pastas para organizar o projeto
        -assets (imagens usadas)
        -components (elementos que vão compor as páginas, podem se repetir, ou feitos só para separar o código)
        -pages
        -services
        -style (global.css - dentro pode colocar o google fonts do projeto, dentro do body)

    dentro da pasta PAGES cada pasta será uma pagina nova (dentro criar o arquivo com o mesmo nome da pasta com .jsx e outro .css)
    dentro do arquivo .jsx criado colocar o padrão
        
        function XXXXXXXXX(){
            return <>

            </>
        }

        export default XXXXXXXXX; 

    com esse nome XXXXXXXXX pode colocar no index.js <XXXXXXXXX />
    porem precisa importar na página o "import XXXXXXXXX from "../../caminho.jsx""

    BOOTSTRAP - instalação pegando no site e colocando no index.html
        dentro do HEAD
            - <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
            - <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

        dentro do DIV
            - <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
            - <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
            - <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

    Com o BOOTSTRAP ver o conceito de GRID SYSTEM (col, d-flex)

    como é um arquivo JSX tem javascript dentro então na hora de importar uma imagem <img src={} className="" />
        - dentro do SRC vai o nome dado na hora de importar para a página, no padrão import XXXXX from "caminho"
        
        - troca-se a Tag A de link por uma chamada Link, que tem que importar o pacote !--router-dom--!
            -Para importar usar npm install react-router-dom
            depois importar no inicio da página -> import { Link } from "react-router-dom" //dentro de chaves pois pode ser que usaremos outras coisas dentro do router-dom
            depois é criar um arquivo chamado rotas.js dentro de SRC para fazer o controle das rotas que vamos colocar dentro do Link que importamos
                - Dentro do arquivo rotas utilizar esse padrão 
                    import { BrowserRouter, Route, Routes } from "react-router-dom";
                    import NOMEPÁGINA from "./pages/CAMINHOPÁGINA;

                    function Rotas(){
                        return <BrowserRouter>
                            <Routes>
                                <Route path="/NOME QUE VAI SER COLOCADO NO TO DENTRO DO LINK" element={<NOMEPÁGINA />}/>
                                <Route />
                                ....
                            </Routes>
                        </BrowserRouter>
                    }
                - Depois de ter criado corretamente vá a página index.js e importa o Rotas e depois coloque ele dentro do root.render e ele ira redirecionar para o rotas e ver qual a url será
                - quando for chamada a função Link em qualquer página precisa colocar o padrão <Link to="/NOME QUE FOI COLOCADO DENTRO DO PATH NO ROTAS.JS"
export default Rotas; 
        - PROPS são dados que vem da página que foi chamada, parametros que passo para os componentes para fazer especificações em cada página

    Outra biblioteca utilizada nesse projeto é o npm install react-google-charts


na parte de dinheiro colocar o modelo {new Intl.NumberFormat('pt-br', {style:'currency', currency:'BRL'}).format(VARIÁVEL)}

instalaçaõ do pacote que ajuda a mosntar a lista na página de negócios => npm install react-data-table-component

instalação do pacote para o botão de excluir fazer ação => npm install react-confirm-alert

para editar a lista de negocios tem a biblioteca => npm install react-dock
